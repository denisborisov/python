'''
Task 3.

Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
'''

print("\n***** Task 3 *****")
print("\n>Let's play with exceptions.")


class NotANumberExpection(Exception):
    def __init(self, text):
        self.text = text


numbers = []
while True:
    try:
        number = input("\nEnter a number or 'stop' to finish: ")
        if number == 'stop':
            break
        if number.isdigit() or number[0] in ('+', '-') and number[1:].isdigit():
            numbers.append(int(number))
        else:
            raise NotANumberExpection('The value entered is not a number. Please, try again.')
    except NotANumberExpection as nan:
        print(nan)

print(numbers)